{"version":3,"sources":["components/Form.js","components/Todo.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","event","target","type","className","onClick","preventDefault","text","completed","id","Math","random","e","name","Todo","todo","map","item","filter","List","filteredTodos","App","useState","status","setFilteredTodods","useEffect","getLocalStorage","filterHander","saveLocalStorage","localStorage","setItem","JSON","stringify","local","parse","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea92bb0b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function form({inputText,setInputText, todos,setTodos,setStatus}) {\r\n\r\n    const inputTextHandler = (event)=>{\r\n        setInputText(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event)=>{\r\n        event.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random()*1000}\r\n        ]);\r\n        setInputText('');\r\n    }\r\n\r\n    const statusHandler = (e)=>{\r\n        setStatus(e.target.value);\r\n    }\r\n    \r\n    return (\r\n        <form>\r\n            <input value={inputText} \r\n                    onChange={inputTextHandler} \r\n                    type=\"text\" \r\n                    className=\"todo-input\" \r\n            />\r\n            <button onClick={submitHandler}\r\n                    className=\"todo-button\" \r\n                    type=\"submit\">\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\n\r\nexport default function Todo({todo, text, todos, setTodos}) {\r\n\r\n    const deleteHandler = (event)=>{\r\n        \r\n        setTodos(todos.filter((item)=> item.id !== todo.id ) );\r\n                               \r\n        // console.log();                      \r\n    };\r\n\r\n    const completeHandler = (event)=>{\r\n        setTodos(todos.map((item)=> {\r\n            if(item.id === todo.id){\r\n                return {...item, completed: !item.completed} \r\n            } ;\r\n            return  item ;\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? 'completed': ''}`}>{text}\r\n            </li>\r\n            <button className=\"complete-btn\" onClick={completeHandler} >\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n                <button className=\"trash-btn\" onClick={deleteHandler}>\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function List({todos, setTodos,filteredTodos}) {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n               {\r\n                    filteredTodos.map((todo) =>  (<Todo key={todo.id}\r\n                                                 todo={todo} \r\n                                                 text={todo.text} \r\n                                                 todos={todos} \r\n                                                 setTodos={setTodos}\r\n                                            />) \r\n                            )\r\n                } \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\n\nfunction App() {\n\n  \n  \n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const [filteredTodos,setFilteredTodods] = useState([]);\n  \n\n  useEffect(()=>{\n    getLocalStorage();\n     } ,[])\n\n  useEffect(()=>{\n    filterHander();\n    saveLocalStorage();\n  },[todos,status])\n\n  const filterHander = ()=> {\n\n    switch(status){\n      case 'completed':\n        setFilteredTodods(todos.filter((item)=>(item.completed === true)));\n        break;\n      case 'uncompleted':\n        setFilteredTodods(todos.filter((item)=>(item.completed === false)));\n        break;\n      default:\n        setFilteredTodods(todos);\n        break;\n    }\n\n  }\n\n  const saveLocalStorage = ()=>{\n\n      localStorage.setItem('todos',JSON.stringify(todos))\n    \n  }\n  const getLocalStorage = ()=>{\n    let local = JSON.parse(localStorage.getItem('todos')) \n      if(local === null){\n        localStorage.setItem('todos',[])\n      }else{\n        setTodos(local);\n        // console.log(local);\n      }\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>My Todo List</h1>\n      </header>\n      <Form  inputText={inputText} \n             setInputText={setInputText} \n             todos={todos} \n             setTodos={setTodos}\n             setStatus={setStatus}\n       />\n      <List todos={todos} setTodos={setTodos} filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}